{"version":3,"sources":["../src/index.js"],"names":["ajv","Ajv","createValidationMdw","schemas","queryValidator","query","compile","noop","bodyValidator","body","bodyToStringMapping","response","Object","keys","forEach","status","validation","ctx","next","logger","console","isQueryValid","request","error","errors","message","isBodyValid","isPlainObject","obj","pipe","Buffer","isBuffer"],"mappings":"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","sourcesContent":["import Ajv from \"ajv\";\nimport CreateFastJSON from \"fast-json-stringify\";\n\nconst ajv = new Ajv();\n\nexport default function createValidationMdw(schemas) {\n  const queryValidator = schemas.query ? ajv.compile(schemas.query) : noop;\n  const bodyValidator = schemas.body ? ajv.compile(schemas.body) : noop;\n\n  const bodyToStringMapping = {};\n\n  if (schemas.response)\n    Object.keys(schemas.response).forEach(status => {\n      bodyToStringMapping[status] = CreateFastJSON(schemas.response[status]);\n    });\n\n  return async function validation(ctx, next) {\n    const logger = ctx.logger || console;\n    const isQueryValid = queryValidator(ctx.request.query);\n\n    if (!isQueryValid) {\n      logger.error(\"query is invalid\", queryValidator.errors);\n      ctx.status = 404;\n      ctx.body = {\n        error: {\n          message: \"query is invalid\",\n        },\n      };\n    }\n\n    const isBodyValid = bodyValidator(ctx.request.body);\n    if (!isBodyValid) {\n      logger.error(\"request body is invalid\", bodyValidator.errors);\n      ctx.status = 404;\n      ctx.body = {\n        error: {\n          message: \"request body is invalid\",\n        },\n      };\n    }\n\n    await next();\n\n    if (!schemas.response) return;\n    if (!schemas.response[ctx.status]) return;\n\n    if (!isPlainObject(ctx.body)) {\n      logger.error(\"response is not a json object\");\n\n      ctx.status = 500;\n      ctx.body = {\n        error: {\n          message: \"response is not a json object\",\n        },\n      };\n\n      if (!schemas.response[ctx.status]) return;\n    }\n\n    const body = bodyToStringMapping[ctx.status](ctx.body);\n    ctx.body = body;\n  };\n}\n\nfunction noop() {\n  return true;\n}\n\nfunction isPlainObject(obj) {\n  return (\n    typeof obj === \"object\" &&\n    typeof obj.pipe === \"undefined\" &&\n    !Buffer.isBuffer(obj)\n  );\n}"],"file":"index.js"}